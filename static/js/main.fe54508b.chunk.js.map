{"version":3,"sources":["components/Navbar.js","components/FormText.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggle","style","width","height","cursor","toggleModes","htmlFor","label","FormText","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","color","heading","value","onChange","e","console","log","target","rows","backgroundColor","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","toogle","document","getElementById","innerHTML","cancel","split","filter","element","Alert","alert","role","message","data-bs-dismiss","defaultProps","App","setMode","_useState3","_useState4","setLabel","_useState5","_useState6","setAlert","setTimeout","body","cls","classList","remove","add","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.fe54508b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" href=\"/\">About</a>\r\n            </li>\r\n\r\n          </ul>\r\n          <div className=\"bg-primary rounded mx-2\" onClick={()=>{props.toggle('primary')}}style={{width:'30px', height:'30px', cursor:'pointer'}}></div>\r\n          <div className=\"bg-danger rounded mx-2\" onClick={()=>{props.toggle('danger')}}style={{width:'30px', height:'30px', cursor:'pointer'}}></div>\r\n          <div className=\"bg-warning rounded mx-2\" onClick={()=>{props.toggle('warning')}}style={{width:'30px', height:'30px', cursor:'pointer'}}></div>\r\n          <div className=\"bg-success rounded mx-2\" onClick={()=>{props.toggle('success')}}style={{width:'30px', height:'30px', cursor:'pointer'}}></div>\r\n          <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\"  id=\"flexSwitchCheckDefault\" onClick={()=>{props.toggleModes(null)}}/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.label}</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.propTypes = { title: PropTypes.string.isRequired }\r\nNavbar.defaultProps = { title: 'Set title' }","import React, { useState } from \"react\";\r\nexport default function FormText(props) {\r\n\r\n  const handleUpperCase = () => {\r\n    // console.log('Clicked on handle ' + text)\r\n    // setText('Hey this is me');\r\n\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n    props.showAlert('Text converted to uppercase', 'Success')\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    console.log('On change')\r\n    setText(e.target.value)\r\n  };\r\n\r\n  const handleLowerCase = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n    props.showAlert('Text converted to lowercase', 'Success');\r\n  }\r\n\r\n  const handleClearCase = () => {\r\n    let newText = '';\r\n    setText(newText)\r\n    props.showAlert('Text cleared', 'Success')\r\n  }\r\n  const handleCopyCase = () => {\r\n    navigator.clipboard.writeText(text)\r\n    // document.getSelection.removeAllRanges()\r\n    props.showAlert('Text Copied to clipboard', ' ')\r\n  }\r\n\r\n  const handleSpeak = () => {\r\n    let msg = new SpeechSynthesisUtterance(text);\r\n    // msg.text = text;\r\n    window.speechSynthesis.speak(msg);\r\n\r\n    const toogle = document.getElementById('toggle');\r\n    if (toogle.innerHTML === \"Speak\") {\r\n      toogle.innerHTML = \"Stop\";\r\n      props.showAlert('Played', 'Success');\r\n\r\n    }\r\n    else {\r\n      toogle.innerHTML = \"Speak\"\r\n      props.showAlert('Stopped', 'Success')\r\n      if (toogle.innerHTML === \"Speak\") {\r\n        window.speechSynthesis.cancel()\r\n\r\n      }\r\n    }\r\n  }\r\n  const [text, setText] = useState(\"\");\r\n  //   setText('New text');\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"container mt-5\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }} >\r\n          <h1 >{props.heading}</h1>\r\n          <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\" style={{ backgroundColor: props.mode === 'dark' ? '#13466e' : 'white', color: props.mode === 'dark' ? '#fff' : 'black' }}></textarea>\r\n          </div>\r\n          <button disabled={text.length === 0} className=\"btn btn-primary upper mx-2\" onClick={handleUpperCase}>Convert to Uppercase</button>\r\n          <button disabled={text.length === 0} className=\"btn btn-primary lower mx-2\" onClick={handleLowerCase}>Convert to Lowercase</button>\r\n          <button disabled={text.length === 0} className=\"btn btn-primary lower mx-2\" onClick={handleClearCase}>Clear</button>\r\n          <button disabled={text.length === 0} className=\"btn btn-primary lower mx-2\" id=\"handleCopy\" onClick={handleCopyCase}>Copy</button>\r\n          <button disabled={text.length === 0} type=\"submit\" onClick={handleSpeak} className=\"btn btn-primary mx-2 my-2\" id=\"toggle\">Speak</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n        <h4 className=\"mt-3\">Your text summary</h4>\r\n        {/* <p> {text.split(' ').length} word and {text.length-text.split(' ').length+1} characters</p> */}\r\n        <p> <b>{text.split(' ').filter((element)=>{return element.length!==0}).length}</b> word and <b>{text.length}</b> characters</p>\r\n        <p><b>{0.008 * text.split(' ').filter((element)=>{return element.length!==0}).length}</b> minutes to read</p>\r\n        <h4>Preview</h4>\r\n        <p>{text.length > 0 ? text : \"Nothing to preview\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    <div style={{height:'50px'}}>\r\n      {props.alert && <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n        <strong>{props.alert.type}</strong>  {props.alert.message}\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport React from 'react';\nimport FormText from './components/FormText'\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport { useState } from 'react';\n// import { BrowserRouter,Routes,Route } from 'react-router-dom';\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [label, setLabel] = useState('Enable Dark Mode')\n  const [alert, setAlert] = useState(null)\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n  const removeClasses = () => {\n    document.body.classList.remove('bg-primary')\n    document.body.classList.remove('bg-danger')\n    document.body.classList.remove('bg-success')\n    document.body.classList.remove('bg-warning')\n  }\n  const toggle = (cls) => {\n    removeClasses()\n    document.body.classList.add('bg-' + cls)\n  }\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode('dark')\n      setLabel('Enable Light Mode')\n      document.body.style.backgroundColor = '#042743'\n      showAlert('Dark mode enabled', 'Success')\n      document.title = 'React App - Dark Mode'\n      // setInterval(() => {\n      //   document.title = \"Dark Mode Welcoming you\"\n      // }, 1500);\n\n      // setInterval(() => {\n      //   document.title = \"Welcome to Dark Mode\"\n      // }, 1200);\n    }\n    else {\n      setMode('light')\n      setLabel('Enable Dark Mode')\n      document.body.style.backgroundColor = 'white'\n      showAlert('Light mode enabled', 'Success')\n      document.title = 'React App - Light Mode'\n    }\n  }\n\n  return (\n    <>\n      {/* <BrowserRouter>\n      <Navbar title={\"React Js\"} mode={mode} toggleModes={toggleMode} label={label} toggle={toggle} />\n      <Alert alert={alert} />\n      <Routes>\n        <Route path=\"/\" element={<FormText showAlert={showAlert} heading={\"Enter the text to analyze below:\"} mode={mode}/>}/>\n\n      <Route path=\"/About\" element={<About mode={mode}/>}/>\n      </Routes>\n      </BrowserRouter> */}\n\n      <Navbar title={\"React Js\"} mode={mode} toggleModes={toggleMode} label={label} toggle={toggle} />\n      <Alert alert={alert} />\n      <FormText showAlert={showAlert} heading={\"Enter the text to analyze below:\"} mode={mode} />\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}